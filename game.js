let Game={
  button:{
    topLeft:document.getElementById("topLeft"),
    topRight:document.getElementById("topRight"),
    bottomLeft:document.getElementById("bottomLeft"),
    bottomRight:document.getElementById("bottomRight"),
    startButton:document.getElementById("start"),
    resetButton:document.getElementById("reset"),
    currentScore:document.getElementById("currentScore"),
    highScore:document.getElementById("highScore")
  },
  sequencing:{
    sequence:[],
    makeSequence:function(num){
      for(let i=0;i<num;i++){
        sequence.push(getRandomPanel());
      }
    },
    getRandomPanel:function(){
      let panels=["topLeft", "topRight", "bottomLeft", "bottomRight"];
      let panel = panels[parseInt(Math.random()*panels.length)];
      console.log(panel);
      return(panel);
    },
  },
  flashing:{
    addFlash:function(panel){
      getPanel(panel).classList.add("active");
    },
    removeFlash:function(panel){
      getPanel(panel).classList.remove("active");
    },
    flash:function(panel){
      addFlash(panel);
      setTimeout(()=>{removeFlash(panel)},1000);
    },
    doFlashses:function(){
      for(let i=0;i<sequence.length;i++){
        setTimeout(()=>{flash(sequence[i])},2000*i);
        setTimeout(()=>{},1000);
      }
    }
  },
  playing:{
    level:1,
    ready:false,
    failed:false,
    answerCompleted:false,
    playerSequence:[],
    startGame:function(){
      if (failed!=true){
        makeSequence(4);
        doFlashes();
        ready=true;
        if(ready==true){
          topLeft.addEventListener("click",addTopLeftAnswer);
          topRight.addEventListener("click",addTopRightAnswer);
          bottomLeft.addEventListener("click",addBottomLeftAnswer);
          bottomRight.addEventListener("click",addBottomRightAnswer);
        }
      }
    },
    addTopLeftAnswer:function(){
      playerSequence.push("topLeft");
      console.log("topLeft");
      checkIfAnswerIsDone();
    },
    addTopRightAnswer:function(){
      playerSequence.push("topRight");
      console.log("topRight");
      checkIfAnswerIsDone();
    },
    addBottomLeftAnswer:function()
    {
      playerSequence.push("bottomLeft");
      console.log("bottomLeft");
      checkIfAnswerIsDone();
    },
    addBottomRightAnswer:function(){
      playerSequence.push("bottomRight");
      console.log("bottomRight");
      checkIfAnswerIsDone();
    },
    checkIfAnswerIsDone:function(){
      if(playerSequence.length==sequence.length){
        checkAnswer();
      }
    },
    getPanel:function(panel){
      if(panel=="topLeft"){
        return(topLeft);
      }
      if(panel=="topRight"){
        return(topRight);
      }
      if(panel=="bottomLeft"){
        return(bottomLeft);
      }
      if(panel=="bottomRight"){
        return(bottomRight);
      }
    },
    arraysEqual:function(playerSequence,sequence){
      for(let i=0;i<sequence.length;i++){
        if(playerSequence[i]!=sequence[i]){
          return(false);
        }
      }
      return (true);
    },
    checkAnswer:function(){
        if(arraysEqual(playerSequence,sequence)){
          alert("Sequence Correct!");
          level=level+1;
        }
        else{
          alert("Sequence Wrong!");
          failed=true;
        }
    }
  }
}
startButton.addEventListener("click", startGame);
